#BlueJ class context
comment0.target=Iterator
comment1.params=begin
comment1.target=Iterator(DoublingList)
comment1.text=\r\n\ builds\ enw\ listIterator\ object\ to\ act\ on\ passed\ DoublingList\r\n\ @param\ begin\ DoublingList\ object\ to\ be\ traversed\ by\ iterator\r\n
comment10.params=
comment10.target=void\ remove()
comment10.text=\r\n\ removes\ value\ last\ returned\ by\ Iterator,\ this\ would\ be\ the\ value\ stored\ in\ index\ pointer\r\n
comment11.params=e
comment11.target=void\ set(java.lang.Object)
comment11.text=\r\n\ sets\ last\ called\ value\ to\ passed\ value\ using\ pointer\r\n\ @param\ e\ E\ type\ value\ representing\ object\ to\ replace\ last\ returned\ item\r\n
comment2.params=index
comment2.target=void\ setPointer(int)
comment2.text=\r\n\ sets\ pointer\ value\ to\ passed\ desired\ value\r\n\ @param\ index\ int\ value\ for\ pointer\ to\ be\ set\ to\r\n
comment3.params=e
comment3.target=void\ add(java.lang.Object)
comment3.text=\r\n\ adds\ an\ object\ at\ the\ end\ of\ the\ current\ list\ (index\ pointer+1)\r\n\ @param\ e\ E\ type\ object\ representing\ object\ to\ be\ added\ to\ the\ end\ of\ the\ list\r\n
comment4.params=
comment4.target=boolean\ hasNext()
comment4.text=\r\n\ returns\ true\ if\ there\ exist\ a\ value\ in\ the\ spot\ immediately\ after\ the\ current\ list\ pointer\r\n\ @return\ boolean\ object\ representing\ whether\ there\ exist\ a\ value\ immediately\ following\ the\ current\ list\ pointer\r\n
comment5.params=
comment5.target=boolean\ hasPrevious()
comment5.text=\r\n\ returns\ true\ if\ there\ exist\ a\ value\ in\ the\ spot\ immediately\ previous\ to\ the\ current\ list\ pointer\r\n\ @return\ boolean\ object\ representing\ whether\ there\ exist\ a\ value\ immediately\ previous\ to\ the\ current\ pointed\ to\ object\r\n
comment6.params=
comment6.target=java.lang.Object\ next()
comment6.text=\r\n\ returns\ next\ value\ in\ list\r\n\ @return\ E\ type\ object\ representing\ the\ value\ stored\ in\ the\ next\ spot\ in\ the\ list\r\n
comment7.params=
comment7.target=int\ nextIndex()
comment7.text=\r\n\ returns\ index\ of\ value\ that\ would\ be\ returned\ by\ next()\ call\r\n\ @return\ int\ value\ representing\ index\ of\ object\ that\ would\ be\ returned\ by\ the\ next\ next()\ method\ call,\ will\ return\ list\ size\ if\ currently\ on\ last\ element\ of\ list\r\n
comment8.params=
comment8.target=java.lang.Object\ previous()
comment8.text=\r\n\ returns\ object\ with\ index\ immediately\ previous\ to\ what\ is\ currently\ beign\ pointed\ to\r\n\ @return\ E\ type\ object\ representing\ object\ immediately\ before\ that\ represented\ by\ current\ pointer\r\n
comment9.params=
comment9.target=int\ previousIndex()
comment9.text=\r\n\ returns\ the\ index\ of\ the\ object\ immediately\ previous\ to\ the\ one\ being\ currently\ pointed\ to\r\n\ @return\ int\ value\ representing\ index\ of\ object\ immediately\ previous\ to\ current\ pointer\r\n
numComments=12
