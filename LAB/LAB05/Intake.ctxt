#BlueJ class context
comment0.target=Intake
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ \ \ intakes\ data\ from\ file,\ parses\ into\ WordList\ format,\ separating\ each\ individual\ word\ and\ excluding\ words\ designated\ in\ stop\ word\ file\r\n\ \ \ initializes\ words\ in\ separate\ test\ WordList,\ then\ sorts\ using\ bubble\ sort,\ insertion\ sort,\ and\ selection\ sort,\ counting\ the\ number\ of\ required\ swaps\ for\ each\r\n\ \ \ \ \ \ \ each\ sorting\ algorithm\ intakes\ a\ comparator\ to\ be\ used\ while\ comparing\r\n\ \ \ \ \ \ \ selects\ the\ top\ k\ values\ from\ each\ list\r\n\ \ \ prints\ each\ of\ these\ test\ lists\ as\ readable\ Strings\r\n
comment10.params=arr
comment10.target=java.lang.String\ printArr(java.util.ArrayList)
comment10.text=\r\n\ returns\ a\ String\ object\ representing\ a\ readable\ version\ of\ the\ passed\ ArrayList\r\n\ @param\ arr\ Word\ ArrayList\ to\ be\ converted\r\n\ @return\ String\ representing\ a\ readable\ version\ of\ the\ passed\ array\r\n
comment2.params=words\ sortType\ k
comment2.target=Word[]\ topK(WordList,\ int,\ int)
comment2.text=\r\n\ sorts\ words\ given\ a\ specified\ method,\ then\ returns\ an\ array\ of\ a\ given\ size\ with\ the\ top\ elements\ of\ the\ sorted\ words\r\n\ @param\ words\ WordList\ object\ with\ words\ to\ be\ sorted\r\n\ @param\ sortType\ indicates\ type\ of\ sorting\ to\ be\ used\r\n\ @param\ k\ integer\ representation\ of\ the\ number\ of\ elements\ to\ be\ included\ in\ the\ final\ returned\ array\r\n\ @return\ an\ array\ of\ size\ k\ containing\ the\ top\ k\ Word\ objects\ contained\ in\ WordList\ according\ to\ sortType\r\n
comment3.params=
comment3.target=void\ setUp()
comment3.text=\r\n\ takes\ in\ 2\ files\ of\ text,\ parses\ contents\ into\ individual\ words,\ builds\ a\ WordList\ from\ words,\ then\ prints\ words\ to\ file\r\n
comment4.params=
comment4.target=void\ listInit()
comment4.text=\r\n\ defines\ 4\ WordList\ objects\ to\ be\ accessed\ by\ other\ methods\r\n
comment5.params=list\ i\ k
comment5.target=void\ swap(java.util.ArrayList,\ int,\ int)
comment5.text=\r\n\ helper\ method\ to\ swap\ values\ at\ specified\ indices\ in\ a\ passed\ ArrayList\r\n\ @param\ list\ ArrayList\ object\ containing\ values\ ot\ be\ swapped\r\n\ @param\ i\ int\ value\ representing\ the\ index\ of\ a\ value\ to\ be\ swapped\r\n\ @param\ k\ int\ value\ representing\ the\ index\ of\ a\ value\ to\ be\ swapped\r\n
comment6.params=words\ comp
comment6.target=int\ selectionSort(java.util.ArrayList,\ java.util.Comparator)
comment6.text=\r\n\ sorts\ arraylist\ according\ to\ the\ passed\ comparator\ using\ the\ selection\ sort\ algorithm\r\n\ @param\ words\ Arraylist\ object\ containing\ objects\ to\ be\ sorted\ of\ generic\ type\ T\r\n\ @param\ comp\ Copmarator\ object\ to\ be\ used\ when\ comparing\ objects\ in\ list\ words\r\n\ @return\ number\ of\ swaps\ required\ to\ sort\ list\ using\ selection\ sort\ algorithm\r\n
comment7.params=words\ comp
comment7.target=int\ bubbleSort(java.util.ArrayList,\ java.util.Comparator)
comment7.text=\r\n\ sorts\ arraylist\ according\ to\ the\ passed\ comparator\ using\ the\ bubble\ sort\ algorithm\r\n\ @param\ words\ Arraylist\ object\ containing\ objects\ to\ be\ sorted\ of\ generic\ type\ T\r\n\ @param\ comp\ Copmarator\ object\ to\ be\ used\ when\ comparing\ objects\ in\ list\ words\r\n\ @return\ number\ of\ swaps\ required\ to\ sort\ list\ using\ bubble\ sort\ algorithm\r\n
comment8.params=words\ comp
comment8.target=int\ insertionSort(java.util.ArrayList,\ java.util.Comparator)
comment8.text=\r\n\ sorts\ arraylist\ according\ to\ the\ passed\ comparator\ using\ the\ insertion\ sort\ algorithm\r\n\ @param\ words\ Arraylist\ object\ containing\ objects\ to\ be\ sorted\ of\ generic\ type\ T\r\n\ @param\ comp\ Copmarator\ object\ to\ be\ used\ when\ comparing\ objects\ in\ list\ words\r\n\ @return\ number\ of\ swaps\ required\ to\ sort\ list\ using\ insertion\ sort\ algorithm\r\n
comment9.params=arr
comment9.target=java.lang.String\ printArr(java.lang.Object[])
comment9.text=\r\n\ returns\ a\ String\ object\ representing\ a\ readable\ version\ of\ the\ passed\ array\r\n\ @param\ arr\ array\ to\ be\ converted\r\n\ @return\ String\ representing\ a\ readable\ version\ of\ the\ passed\ array\r\n
numComments=11
