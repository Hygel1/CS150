#BlueJ class context
comment0.target=Shipment
comment0.text=\r\n\ Shipments\ to\ be\ carried\ from\ warehouse\ to\ warehouse\ by\ truck\ objects.\ Each\ shipment\ is\ assigned\ 2\ warehouses\ and\ a\ truck\ to\ get\ from\ warehouse\ to\ warehouse\r\n\r\n\ @author\ Sean\ McLoughlin\r\n\ @version\ 12/14/24\r\n
comment1.params=location\ destination
comment1.target=Shipment(Warehouse,\ Warehouse)
comment1.text=\r\n\ Shipment\ constructor\ taking\ pickup\ and\ dropoff\ locations\ for\ shipment\ instance.\ Also\ assigns\ other\ field\ values\r\n\ @param\ location\ Warehouse\ object\ representing\ pickup\ location\r\n\ @param\ destination\ Warehouse\ object\ representing\ dropoff\ location\r\n
comment10.params=
comment10.target=boolean\ hasBeenPickedUp()
comment10.text=\r\n\ indicates\ whether\ a\ shipment\ has\ been\ picked\ up\ by\ its\ assigned\ truck\r\n\ @return\ boolean\ value\ representing\ whether\ shipment\ has\ been\ picked\ up\r\n
comment11.params=other
comment11.target=double\ getDistance(int[])
comment11.text=\r\n\ find\ distance\ from\ passed\ location\ using\ pythagorean\ theorem\r\n\ @param\ other\ int\ array\ (2\ ind)\ representing\ location\ to\ be\ referenced\r\n\ @return\ distance\ from\ called\ Shipment\ to\ passed\ location\ value\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ returns\ String\ representation\ of\ called\ shipment\ instance\ with\ S\ identifier,\ local\ ID,\ and\ shipment\ size\r\n\ @return\ String\ type\ value\ representing\ called\ object\r\n
comment2.params=w1\ w2\ size
comment2.target=Shipment(Warehouse,\ Warehouse,\ int)
comment2.text=\r\n\ testing\ shipment\ constructor\ to\ designate\ shipment\ size\r\n\ @param\ w1\ Shipment\ type\ value\ representing\ pickup\ location\r\n\ @param\ w2\ Shipment\ type\ value\ representing\ dropoff\ location\r\n\ @param\ size\ int\ type\ value\ representing\ size\ of\ shipment\ in\ 'units'\r\n
comment3.params=truck
comment3.target=void\ setTruck(Truck)
comment3.text=\r\n\ sets\ value\ representing\ truck\ to\ pick\ up\ this\ shipment.\ Necessary\ to\ avoid\ creation\ time\ issues\ with\ PriorityQueue\r\n\ @param\ truck\ Truck\ type\ value\ representing\ truck\ to\ pick\ up\ this\ shipment\r\n
comment4.params=
comment4.target=Truck\ getTruck()
comment4.text=\r\n\ returns\ truck\ assigned\ to\ pick\ up\ shipment\ instance\r\n\ @return\ Truck\ type\ value\ representing\ truck\ to\ pick\ up\ this\ shipment\r\n
comment5.params=t
comment5.target=int\ compareTo(Shipment)
comment5.text=\r\n\ compares\ called\ shipment\ to\ passed\ shipment\ instance\ using\ a\ combination\ of\ distance\ to\ their\ truck\ and\ creation\ time\ (localID)\r\n\ @param\ t\ Shipment\ object\ representing\ instance\ to\ be\ compared\ to\ the\ called\ instance\r\n\ @return\ int\ type\ value\ representing\ difference\ between\ value\ (pos.\ if\ this>that,\ neg.\ if\ this<that)\r\n
comment6.params=
comment6.target=int\ size()
comment6.text=\r\n\ returns\ number\ of\ 'units'\ contained\ by\ shipment\ representing\ shipment\ size\r\n\ @return\ int\ type\ value\ representing\ number\ of\ units\ in\ shipment\ determining\ size\r\n
comment7.params=
comment7.target=int\ getID()
comment7.text=\r\n\ reutrns\ the\ local\ ID\ value\ for\ shipment\ instance\r\n\ @return\ int\ type\ value\ representing\ current\ Shipment\ instance\ ID\r\n
comment8.params=
comment8.target=Warehouse\ getLocation()
comment8.text=\r\n\ returns\ current\ destination\ of\ interest\ for\ Shipment\ instance\r\n\ if\ shipment\ has\ not\ yet\ been\ picked\ up,\ method\ will\ return\ pickup\ location\ of\ shipment,\ otherwise\ it\ will\ return\ the\ dropoff\ location\r\n\ @return\ current\ location\ of\ interest\ for\ Shipment\ object\r\n
comment9.params=
comment9.target=void\ pickUp()
comment9.text=\r\n\ tells\ Shipment\ instance\ that\ it\ has\ been\ picked\ up\ by\ a\ truck\r\n
numComments=13
