#BlueJ class context
comment0.target=Truck
comment1.params=orders
comment1.target=Truck(ArrayList)
comment1.text=\r\n\ Truck\ constructor\ with\ param\ containing\ a\ set\ of\ orders\ to\ be\ added\ to\ the\ itenerary\r\n\ \ \ \ \ \ orders\ list\ is\ vetted\ to\ ensure\ that\ there\ are\ no\ orders\ which\ are\ impossible\ for\ the\ truck\ to\ pick\ up\r\n\ Fields\ are\ initialized\ to\ appropriate\ values,\ maxShipments\ is\ set\ to\ random\ number\ between\ 2\ and\ 5\ --\ speed\ is\ set\ to\ the\ corresponding\ value\r\n\ Orders\ are\ transferes\ to\ a\ PriorityQueue\ and\ ordered\ in\ a\ way\ that\ considers\ both\ time\ of\ creation\ and\ distance\ from\ truck\r\n\ @param\ orders\ ArrayList\ of\ Shipment\ variables\ representing\ orders\ to\ be\ picked\ up\ by\ the\ truck\r\n
comment10.params=
comment10.target=Shipment\ findNext()
comment10.text=\r\n\ find\ next\ Shipment\ to\ be\ pursued\ by\ taking\ from\ either\ fromt\ of\ queue\ or\ top\ of\ stack\r\n\ @return\ Shipment\ to\ be\ pursued\ next\r\n
comment11.params=
comment11.target=boolean\ finished()
comment11.text=\r\n\ checks\ if\ there\ exists\ any\ more\ shipments\ to\ be\ picked\ up\ or\ dropped\ off,\ if\ not\ the\ Truck\ is\ done\ with\ its\ job\r\n\ @return\ boolean\ value\ representing\ whether\ the\ truck\ has\ finished\ all\ tasks\r\n
comment12.params=
comment12.target=int[]\ getLocation()
comment12.text=\r\n\ accessor\ method\ for\ the\ last\ known\ position\ of\ the\ truck\ on\ the\ map\r\n\ @return\ 2\ index\ int\ array\ representing\ the\ truck's\ position\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ returns\ readable\ representation\ of\ current\ truck\ with\ T\ marker\ and\ local\ ID\r\n\ @return\ String\ representation\ of\ object\ containing\ T\ marker\ and\ ID\ number\r\n
comment14.params=
comment14.target=Stack\ getLoad()
comment14.text=\r\n\ testing\ method\ to\ return\ Shipment\ values\ which\ have\ been\ loaded\ onto\ the\ truck\r\n\ @return\ Stack\ type\ value\ representing\ values\ loaded\ onto\ truck\r\n
comment15.params=
comment15.target=PriorityQueue\ getIten()
comment15.text=\r\n\ testing\ method\ to\ return\ Shipment\ values\ on\ itenerary\r\n\ @return\ PriorityQueue\ type\ value\ representing\ Itenerary\ of\ shipments\ to\ be\ picked\ up\ by\ truck\r\n
comment16.params=
comment16.target=int\ getID()
comment16.text=\r\n\ returns\ unique\ localID\ value\ for\ this\ truck\ instance\r\n\ @return\r\n
comment17.params=val
comment17.target=boolean\ equals(Truck)
comment17.text=\r\n\ checks\ 2\ truck\ instances\ for\ equality\ using\ thier\ unique\ localID\ values\r\n\ @param\ val\ Truck\ type\ value\ to\ be\ considered\r\n\ @return\ boolean\ value\ representing\ equality\r\n
comment18.params=
comment18.target=double\ getDistance()
comment18.text=\r\n\ testing\ method\ to\ access\ distance\ value\r\n\ @return\ double\ value\ representing\ distance\ variable\r\n
comment19.params=
comment19.target=int\ getState()
comment19.text=\r\n\ testing\ method\ to\ return\ state\ value\ to\ determine\ current\ Truck\ action\r\n\ @return\ int\ value\ representing\ state\ variable\r\n
comment2.params=
comment2.target=int\ log_status()
comment2.text=\r\n\ Prints\ current\ status\ of\ this\ truck\ to\ the\ Program-wide\ MapLOG\ file\r\n\ Printed\ in\ format\:\r\n\ Truck\ (truckID)\ |\ Location\ [x,y]\ |\ Storing\:\ carrying/capacity\ |\ State\:\ currentState\ |\ Active\ Shipment\:\ shipmentOfInterest\r\n\ \ \ \ \ \ On\ Board\ Shipments\ (size)\:\ (list\ of\ shipments\ on\ truck\ in\ FILO\ order)\ |\ Eligible\:\ (last\ shipment\ to\ be\ added\ to\ truck)\r\n\ \ \ \ \ \ Itenerary\ (size)\:\ (list\ of\ shipments\ still\ to\ be\ picked\ up)\r\n\ \r\n\ @return\ int\ type\ value\ representing\ whether\ the\ log\ was\ successful,\ 1\=success,\ -1\=failure\r\n
comment20.params=
comment20.target=int\ getSpeed()
comment20.text=\r\n\ testing\ method\ to\ get\ speed\ value\ of\ Truck\r\n\ @return\ int\ value\ representing\ truck\ speed\r\n
comment3.params=orders\ location\ size
comment3.target=Truck(ArrayList,\ int[],\ int)
comment3.text=\r\n\ truck\ testing\ constructor\ --\ identical\ to\ general\ constructor\ but\ begins\ at\ preset\ location\ adn\ has\ preset\ ned\ size\r\n\ @param\ orders\ ArrayList\ of\ orders\ to\ be\ added\ to\ truck's\ itenerary\r\n\ @param\ location\ 2\ index\ int\ array\ defining\ truck's\ starting\ location\r\n\ @param\ size\ int\ value\ representing\ the\ truck's\ bed\ size\r\n
comment4.params=
comment4.target=void\ action()
comment4.text=\r\n\ Designates\ the\ action\ to\ be\ performed\ by\ the\ truck\ for\ this\ hour.\ FSM\ manager\ method\r\n\ increments\ cycle\ variable\ to\ track\ number\ of\ hours\ elapsed\r\n
comment5.params=
comment5.target=void\ stateZero()
comment5.text=\r\n\ findJob\ state\r\n\ finds\ next\ job,\ updates\ variables\ accordingly,\ moves\ for\ one\ hours\ worth,\ then\ passes\ to\ either\ waiting\ or\ moving\ state\r\n
comment6.params=
comment6.target=void\ stateOne()
comment6.text=\r\n\ moving\ state\r\n\ advances\ toward\ destination\ and\ updates\ state\ if\ location\ is\ found\r\n
comment7.params=
comment7.target=void\ stateTwo()
comment7.text=\r\n\ loading\ state\r\n\ decrements\ 'distance'\ (time\ until\ done\ loading)\ and\ check\ if\ finished\ (distance\=0)\r\n\ if\ finished,\ add\ to\ stack,\ remove\ from\ itenerary,\ change\ to\ state\ 0\r\n
comment8.params=
comment8.target=void\ stateThree()
comment8.text=\r\n\ dropping\ state\r\n\ decrements\ 'distance'\ (time\ until\ done\ loading)\ and\ check\ if\ finished\ (distance\=0)\r\n\ if\ finished,\ reomve\ from\ stack,\ change\ to\ state\ 0\r\n
comment9.params=
comment9.target=void\ stateFour()
comment9.text=\r\n\ waiting/arrival\ state\ --\ called\ if\ in\ waiting\ state\ or\ if\ arrived\ at\ warehouse\ in\ some\ motion\ state\r\n\ updates\ variables\ according\ to\ state\ 4,\ attempt\ to\ take\ dock,\ if\ successful\ update\ distance\ to\ represent\ time\ left\ and\ enter\ loading/unloading\ state\r\n
numComments=21
