#BlueJ class context
comment0.target=CustomerReviewArrayList
comment0.text=\r\n\ Write\ a\ description\ of\ class\ CustomerReviewArrayList\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=CustomerReviewArrayList()
comment1.text=\r\n\ builds\ list\ with\ default\ initial\ size\ 10\r\n
comment10.params=
comment10.target=int\ arraySize()
comment10.text=\r\n\ returns\ current\ number\ of\ spaces\ available\ to\ the\ list\ without\ resizing\r\n\ @return\ size\ of\ current\ array\ being\ used\ to\ hold\ the\ list\r\n
comment11.params=
comment11.target=int\ emptyCount()
comment11.text=\r\n\ returns\ number\ of\ available\ (not\ holding\ values)\ spaces\ currently\ in\ the\ array\r\n\ @return\ number\ of\ available\ spaces\ before\ resize\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ prints\ a\ readable\ String\ representing\ all\ values\ in\ the\ list\r\n\ @return\ String\ value\ representing\ all\ values\ in\ the\ list\r\n
comment13.params=
comment13.target=void\ reset()
comment13.text=\r\n\ resets\ all\ values\ in\ the\ array\ by\ moving\ the\ index\ to\ the\ front\ (makes\ no\ change\ to\ the\ actual\ values\ in\ the\ array,\ just\ moves\ counter\ to\ disregard\ current\ elements)\r\n
comment14.params=
comment14.target=CustomerReview\ next()
comment14.text=\r\n\ returns\ value\ specified\ by\ next\ counter,\ which\ starts\ at\ 0\ and\ increments\ one\ each\ time\ this\ method\ is\ called\r\n\ @return\ value\ at\ index\ specified\ by\ nextCounter\r\n
comment15.params=
comment15.target=int\ hashCode()
comment15.text=\r\n\ returns\ value\ representing\ the\ sum\ of\ the\ hashcode\ produced\ by\ every\ element\ of\ the\ list\r\n\ \ this\ implementation\ risks\ 'rolling\ over'\ the\ int\ value\ and\ resulting\ in\ similar\ hash\ values\ for\ lists\ of\ similar\ values\ but\ different\ orders\r\n\ @return\ hash\ code\ value\ for\ the\ current\ list\ based\ on\ its\ values\r\n
comment16.params=other
comment16.target=boolean\ equals(CustomerReviewArrayList)
comment16.text=\r\n\ returns\ true\ if\ all\ values\ of\ each\ list\ are\ equal\r\n\ @return\ boolean\ value\ representing\ whether\ all\ corresponding\ values\ of\ both\ lists\ are\ equal\ according\ to\ the\ CustomerReview\ equals\ method\r\n
comment2.params=
comment2.target=void\ resize()
comment2.text=\r\n\ helped\ method\ to\ resize\ array\ when\ size\ limit\ has\ been\ reached\r\n
comment3.params=e
comment3.target=void\ add(CustomerReview)
comment3.text=\r\n\ appends\ given\ value\ to\ the\ end\ of\ the\ list,\ resizes\ if\ necessary\r\n\ @param\ e\ value\ to\ be\ added\r\n
comment4.params=index\ e
comment4.target=void\ add(int,\ CustomerReview)
comment4.text=\r\n\ insterts\ given\ value\ at\ specified\ index,\ shifts\ values\ down\ if\ necessary\ and\ resizes\ array\ if\ necessary\r\n\ @param\ index\ specified\ index\ for\ placement\r\n\ @param\ e\ value\ to\ be\ added\ at\ specified\ index\r\n
comment5.params=index
comment5.target=CustomerReview\ get(int)
comment5.text=\r\n\ returns\ value\ at\ given\ index\r\n\ @param\ index\ specified\ index\ of\ value\ to\ be\ found\r\n\ @return\ element\ found\ at\ given\ index\r\n
comment6.params=
comment6.target=void\ clear()
comment6.text=\r\n\ fully\ resets\ list,\ creates\ new\ array\ and\ resets\ counters\r\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=\r\n\ returns\ true\ if\ there\ are\ no\ value\ in\ list\r\n\ @return\ boolean\ value\ indicating\ whether\ the\ list\ is\ holding\ values\r\n
comment8.params=index
comment8.target=CustomerReview\ remove(int)
comment8.text=\r\n\ removes\ array\ value\ at\ specified\ index\ and\ returns\ said\ value\r\n\ @param\ index\ specified\ index\ of\ value\ to\ be\ removed\r\n\ @return\ value\ which\ was\ removed\r\n
comment9.params=
comment9.target=int\ size()
comment9.text=\r\n\ returns\ number\ of\ values\ currently\ being\ stored\ in\ the\ list\r\n\ @return\ size\ of\ array\ list\r\n
numComments=17
