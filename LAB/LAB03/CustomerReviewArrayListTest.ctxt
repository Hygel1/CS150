#BlueJ class context
comment0.target=CustomerReviewArrayListTest
comment0.text=\r\n\ The\ test\ class\ IntArrayListTest.\r\n\r\n\ @author\ \ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=CustomerReviewArrayListTest()
comment10.params=
comment10.target=void\ testArraySize()
comment10.text=\r\n\ teste\ arraySize\ method\ by\ adding\ enough\ values\ to\ cross\ resizing\ thresholds,\ then\ comparing\ to\ returned\ arraySize\ value\r\n
comment11.params=
comment11.target=void\ testEmptyCount()
comment11.text=\r\n\ tests\ emptyCount\ method\ by\ adding\ specific\ amounts\ of\ values\ to\ list,\ then\ comparing\ the\ difference\ between\ the\ number\ of\ added\ values\ and\ the\ next\ resizing\ threshold\ to\ the\ returned\ emptyCount\ value\r\n
comment12.params=
comment12.target=void\ testToString()
comment12.text=\r\n\ tests\ toString\ method\ by\ adding\ 1,\ multiple,\ and\ 0\ values\ to\ array,\ testing\ single\ value\ printing,\ conditional\ comma\ printing,\ and\ the\ ability\ to\ skip\ toString's\ for\ loop\ when\ necessary\r\n
comment13.params=
comment13.target=void\ testReset()
comment13.text=\r\n\ tests\ reset\ method\ by\ testing\ that\ both\ size\ and\ arraySize\ are\ reset,\ indicating\ that\ the\ list\ is\ effectively\ untouched\r\n
comment14.params=
comment14.target=void\ testNext()
comment14.text=\r\n\ tests\ next\ function\ by\ checking\ that\ the\ method\ increments\ to\ the\ next\ value\ upon\ being\ called,\ and\ that\ the\ counter\ resets\ when\ the\ list\ is\ reset\r\n
comment2.params=
comment2.target=void\ buildList()
comment2.text=\r\n\ creates\ a\ test\ list\ with\ collection\ of\ different\ strings\ for\ every\ parameter\ value,\ used\ to\ rebuild\ list\ during\ testing\r\n
comment3.params=
comment3.target=void\ testAdd()
comment3.text=\r\n\ tests\ add\ method\ by\ checking\ that\ values\ are\ added\ and\ array\ is\ automatically\ resized\r\n
comment4.params=
comment4.target=void\ testAddIndex()
comment4.text=\r\n\ tests\ add\ at\ index\ method\ by\ testing\ that\ values\ can\ be\ properly\ added\ in\ specified\ indices\ and\ values\ are\ properly\ shifted\r\n
comment5.params=
comment5.target=void\ testGet()
comment5.text=\r\n\ tests\ get\ method\ by\ assigning\ values\ to\ specific\ indices\ and\ testing\ that\ the\ proper\ value\ is\ returned\ \r\n
comment6.params=
comment6.target=void\ testClear()
comment6.text=\r\n\ tests\ clear\ method\ by\ testing\ that\ clearing\ an\ array\ properly\ resets\ counters\ and\ array\ size\r\n
comment7.params=
comment7.target=void\ testEmpty()
comment7.text=\r\n\ tests\ isEmpty\ method\ by\ testing\ an\ empty\ list,\ testing\ a\ list\ with\ a\ value\ added,\ then\ clearing\ and\ resetting\ and\ testing\ the\ list\r\n
comment8.params=
comment8.target=void\ testRemove()
comment8.text=\r\n\ tests\ remove\ method\ by\ testing\ that\ the\ proper\ value\ is\ returned,\ that\ removing\ the\ value\ changes\ the\ value\ returned\ by\ the\ size\ function,\ and\ that\ values\ following\ the\ removed\ value\ are\ properly\ shifted\r\n
comment9.params=
comment9.target=void\ testSize()
comment9.text=\r\n\ tests\ size\ method\ by\ adding\ a\ specific\ number\ of\ values\ to\ the\ list\ and\ comparing\ the\ number\ of\ added\ values\ to\ the\ value\ returned\ by\ the\ size\ method\r\n
numComments=15
