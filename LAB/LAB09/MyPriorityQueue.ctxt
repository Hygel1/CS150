#BlueJ class context
comment0.target=MyPriorityQueue
comment1.params=
comment1.target=MyPriorityQueue()
comment1.text=\r\n\ builds\ new\ empty\ PriorityQueue\ object\ with\ no\ values\r\n
comment10.params=val
comment10.target=void\ listAdd(java.lang.Comparable)
comment10.text=\r\n\ accessor\ method\ for\ item\ list,\ adds\ object\ to\ end\ of\ list\r\n\ @param\ val\ T\ type\ object\ representing\ value\ to\ be\ added\r\n
comment11.params=i
comment11.target=java.lang.Comparable\ remove(int)
comment11.text=\r\n\ accessor\ method\ for\ item\ list,\ removes\ object\ and\ returns\ removed\ value\r\n\ @param\ i\ int\ type\ value\ representing\ index\ of\ value\ to\ be\ removed\r\n\ @return\ removed\ value\r\n
comment2.params=i1\ i2
comment2.target=void\ swap(int,\ int)
comment2.text=\r\n\ swaps\ two\ values\ in\ item\ list\r\n\ @param\ i1\ index\ of\ first\ item\ to\ be\ swapped\r\n\ @param\ i2\ index\ of\ second\ item\ to\ be\ swapped\r\n
comment3.params=t
comment3.target=boolean\ add(java.lang.Comparable)
comment3.text=\r\n\ adds\ value\ to\ queue,\ then\ percolates\ accordingly\ to\ place\ value\ in\ the\ correct\ spot\r\n\ if\ value\ already\ exists\ in\ queue,\ the\ value\ is\ not\ added\ and\ null\ is\ returned\r\n\ @param\ t\ T\ type\ value\ to\ be\ added\ to\ queue\r\n\ @return\ boolean\ value\ representing\ whether\ the\ addition\ was\ successful\r\n
comment4.params=
comment4.target=java.lang.Comparable\ poll()
comment4.text=\r\n\ returns\ and\ removes\ item\ at\ top\ of\ queue,\ then\ adjusts\ list\ accordingly\ to\ maintain\ integrity\ of\ ordering\r\n\ @return\ T\ type\ value\ representing\ top\ of\ queue\ previous\ to\ call\r\n
comment5.params=
comment5.target=java.lang.Comparable\ peek()
comment5.text=\r\n\ returns\ value\ at\ top\ of\ queue\ without\ removing\ it\r\n\ @return\ T\ type\ value\ representing\ value\ currently\ at\ top\ of\ queue\r\n
comment6.params=i
comment6.target=java.lang.Comparable\ get(int)
comment6.text=\r\n\ accessor\ method\ for\ item\ list,\ returns\ value\ at\ specified\ index\r\n\ @param\ i\ int\ type\ value\ representing\ index\ to\ be\ searched\r\n
comment7.params=i\ val
comment7.target=void\ set(int,\ java.lang.Comparable)
comment7.text=\r\n\ accessor\ method\ for\ item\ list,\ sets\ value\ at\ specified\ index\ to\ specified\ value\r\n\ @param\ i\ int\ type\ value\ representing\ index\ to\ be\ set\r\n\ @param\ val\ T\ type\ value\ representign\ value\ to\ be\ moved\ in\r\n
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\ accessor\ method\ for\ item\ list,\ returns\ integer\ representation\ of\ list\ size\r\n\ @return\ in\ type\ value\ representing\ list\ size\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ parses\ list\ into\ readable\ String,\ helpful\ for\ testing\r\n\ @return\ readable\ String\ version\ of\ list\ object\r\n
numComments=12
