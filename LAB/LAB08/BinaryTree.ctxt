#BlueJ class context
comment0.target=BinaryTree
comment0.text=\r\n\ BinaryTree\ abstract\ class\ representing\ basic\ functionality\ of\ a\ BinaryTree\ without\ implementing\ methods\ (insert)\ which\ are\ specific\ to\ a\ type\ of\ BinaryTree\r\n\r\n\ @author\ Sean\ McLoughlin\r\n\ @version\ 11/12/24\r\n
comment1.params=n
comment1.target=BinaryTree(BinaryNode)
comment1.text=\r\n\ constructor\ to\ build\ binary\ tree\ with\ specified\ root\ node;\r\n
comment10.params=
comment10.target=void\ empty()
comment10.text=\r\n\ empties\ tree\ by\ getting\ rid\ of\ root\ node\ reference\r\n
comment11.params=
comment11.target=boolean\ isEmpty()
comment11.text=\r\n\ determines\ whether\ the\ tree\ is\ empty\ by\ checking\ the\ root\ node\r\n\ @return\ true\ if\ the\ tree\ is\ empty,\ false\ if\ it\ contains\ values\r\n
comment2.params=val
comment2.target=boolean\ contains(java.lang.Object)
comment2.text=\r\n\ determines\ whether\ a\ value\ exists\ in\ the\ tree\ already\r\n\ @param\ val\ E\ type\ object\ to\ be\ searched\ for\r\n\ @return\ boolean\ value\ representing\ whether\ the\ value\ exists\ in\ the\ tree\r\n
comment3.params=n\ val
comment3.target=boolean\ containsHelper(BinaryNode,\ java.lang.Object)
comment3.text=\r\n\ private\ helper\ method\ to\ help\ determine\ whether\ a\ given\ value\ is\ in\ the\ tree\r\n\ @param\ n\ BinaryNode\ object\ representing\ current\ position\ in\ the\ tree\r\n\ @param\ val\ E\ type\ object\ representign\ object\ to\ look\ for\r\n\ @return\ true\ if\ similar\ object\ is\ found,\ false\ otherwise\r\n
comment4.params=
comment4.target=java.lang.String\ preOrderString()
comment4.text=\r\n\ returns\ String\ representation\ of\ tree\ in\ preorder\ format\r\n\ @return\ preorder\ format\ String\ representation\ of\ tree\r\n
comment5.params=n
comment5.target=java.lang.String\ preHelper(BinaryNode)
comment5.text=\r\n\ private\ helper\ method\ to\ help\ develop\ preorder\ String\ representation\ of\ tree\r\n\ @param\ n\ BianryNode\ object\ representing\ object\ at\ current\ place\ in\ tree\r\n\ @return\ chunk\ of\ tree's\ String\ representation\r\n
comment6.params=
comment6.target=java.lang.String\ postOrderString()
comment6.text=\r\n\ returns\ String\ representation\ of\ tree\ in\ postrder\ format\r\n\ @return\ postorder\ format\ String\ representation\ of\ tree\r\n
comment7.params=n
comment7.target=java.lang.String\ postHelper(BinaryNode)
comment7.text=\r\n\ private\ helper\ method\ to\ help\ develop\ postorder\ String\ representation\ of\ tree\r\n\ @param\ n\ BianryNode\ object\ representing\ object\ at\ current\ place\ in\ tree\r\n\ @return\ chunk\ of\ tree's\ String\ representation\r\n
comment8.params=
comment8.target=java.lang.String\ inOrderString()
comment8.text=\r\n\ returns\ String\ representation\ of\ tree\ in\ inorder\ format\r\n\ @return\ inorder\ format\ String\ representation\ of\ tree\r\n
comment9.params=n
comment9.target=java.lang.String\ inHelper(BinaryNode)
comment9.text=\r\n\ private\ helper\ method\ to\ help\ develop\ inorder\ String\ representation\ of\ tree\r\n\ @param\ n\ BianryNode\ object\ representing\ object\ at\ current\ place\ in\ tree\r\n\ @return\ chunk\ of\ tree's\ String\ representation\r\n
numComments=12
