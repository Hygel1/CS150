#BlueJ class context
comment0.target=Warehouse
comment1.params=
comment1.target=Warehouse()
comment1.text=\r\n\ No\ constructor\ warehouse\ constructor,\ initializes\ all\ fields\ with\ either\ empty\ or\ random\ values\r\n
comment10.params=
comment10.target=void\ action()
comment10.text=\r\n\ no\ action\ is\ performed\ by\ Warehouse\ class,\ this\ method\ should\ never\ be\ called\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ returns\ String\ representation\ of\ this\ Warehouse\ instance\ with\ W\ marker\ and\ local\ ID\ number\r\n\ @return\ String\ representation\ of\ this\ object\ with\ W\ marked\ and\ ID\ number\r\n
comment12.params=
comment12.target=Truck[]\ getDocks()
comment12.text=\r\n\ testing\ method\ to\ see\ values\ in\ dock\ array\r\n\ @return\ Truck\ array\ type\ value\ representing\ current\ state\ of\ docks\r\n
comment2.params=numDocks\ position
comment2.target=Warehouse(int,\ int[])
comment2.text=\r\n\ testing\ constructor\ with\ designated\ values\ for\ number\ of\ docks\ and\ position\ on\ map\r\n\ @param\ numDocks\ int\ value\ representing\ number\ of\ indices\ to\ make\ docks\ array\r\n\ @param\ position\ int\ array\ representing\ position\ on\ map\r\n
comment3.params=
comment3.target=int\ getID()
comment3.text=\r\n\ returns\ local\ ID\ of\ called\ warehouse\ instance\r\n\ @return\ int\ value\ representing\ called\ warehouse's\ instance\ ID\r\n
comment4.params=
comment4.target=int[]\ getLocation()
comment4.text=\r\n\ returns\ 2\ index\ int\ array\ representing\ location\ of\ warehouse\r\n\ @return\ 2\ index\ int\ array\ representing\ location\ of\ warehouse\r\n
comment5.params=
comment5.target=int\ dockAvailable()
comment5.text=\r\n\ searches\ through\ docks\ array\ to\ find\ open\ dock,\ returns\ index\ of\ open\ dock\ (-1\ if\ there\ are\ none)\r\n\ @return\ index\ of\ open\ dock,\ -1\ if\ there\ are\ no\ open\ indices\r\n
comment6.params=caller
comment6.target=boolean\ takeDock(Truck)
comment6.text=\r\n\ Searches\ for\ open\ dock\ and\ claims\ it\ for\ passed\ Truck\ object\ if\ there\ is\ an\ available\ spot,\ returns\ false\ if\ there\ are\ no\ docks\ available\r\n\ @param\ caller\ Truck\ type\ object\ representing\ Truck\ attempting\ to\ claim\ dock\r\n\ @return\ boolean\ variable\ representing\ whether\ the\ claim\ was\ successful\r\n
comment7.params=caller
comment7.target=void\ leaveDock(Truck)
comment7.text=\r\n\ looks\ for\ dock\ occupied\ by\ passed\ Truck\ and\ opens\ it\ up\ to\ new\ truck\ by\ setting\ index\ to\ null\r\n
comment8.params=w
comment8.target=boolean\ equals(Warehouse)
comment8.text=\r\n\ uses\ warehouse\ location\ to\ determine\ whether\ two\ warehouses\ are\ the\ same\r\n\ @param\ w\ other\ warehouse\ to\ be\ considered\r\n\ @return\ boolean\ type\ value\ representing\ whether\ the\ warehouses\ are\ equal\r\n
comment9.params=
comment9.target=int\ log_status()
comment9.text=\r\n\ prints\ a\ String\ representation\ of\ the\ current\ state\ of\ this\ Warehouse\ object\ to\ global\ MapLOG.log\ file\ in\ format\r\n\ Warehouse\ (ID)\:\ (list\ of\ docks\ and\ which\ trucks\ are\ taking\ them,\ null\ if\ open)\r\n\ @return\ int\ type\ value\ representing\ whether\ the\ log\ operation\ was\ successful\ (1\=successful,\ -1\=fail)\r\n
numComments=13
